[
  "test/test_preprocessor_parser.py::test_simple",
  "test/test_preprocessor_parser.py::test_nested_if_blocks",
  "test/test_preprocessor_parser_astobjects.py::test_expression_from_tokens[test_tokens0-expected_stack0]",
  "test/test_preprocessor_parser_astobjects.py::test_expression_from_tokens[test_tokens1-expected_stack1]",
  "test/test_preprocessor_parser_astobjects.py::test_expression_from_tokens[test_tokens2-expected_stack2]",
  "test/test_preprocessor_parser_astobjects.py::test_expression_from_tokens[test_tokens3-expected_stack3]",
  "test/test_preprocessor_parser_astobjects.py::test_objectmacro_tokens",
  "test/test_preprocessor_parser_astobjects.py::test_functionmacro_tokens",
  "test/test_preprocessor_parser_astobjects.py::test_functionmacro_tokens_incomplete",
  "test/test_preprocessor_parser_astobjects.py::test_evaluatedinclude_tokens[unexpanded]",
  "test/test_preprocessor_parser_astobjects.py::test_evaluatedinclude_tokens[expanded]",
  "test/test_preprocessor_parser_expect.py::test_simple_expect_token",
  "test/test_preprocessor_parser_expect.py::test_expect_token_failure",
  "test/test_preprocessor_parser_expect.py::test_simple_expect_directive",
  "test/test_preprocessor_parser_expect.py::test_expect_directive_failure_on_unexpected_directive",
  "test/test_preprocessor_tokenizer.py::test_tokenize_directive_valid_input",
  "test/test_preprocessor_tokenizer.py::test_tokenize_directive_null",
  "test/test_preprocessor_tokenizer.py::test_tokenize_directive_error",
  "test/test_preprocessor_tokenizer.py::test_tokenize_line[Null directive]",
  "test/test_preprocessor_tokenizer.py::test_tokenize_line[No parameter directive]",
  "test/test_preprocessor_tokenizer.py::test_tokenize_line[Integer constant]",
  "test/test_preprocessor_tokenizer.py::test_tokenize_line[Character constant]",
  "test/test_preprocessor_tokenizer.py::test_tokenize_line[Function macro]",
  "test/test_preprocessor_tokenizer.py::test_tokenize_line[Conditional statement]",
  "test/test_preprocessor_tokenizer.py::test_tokenize_line[Include statement]",
  "test/test_preprocessor_tokenizer.py::test_tokenize_line[Conditionals aren't files]",
  "test/test_preprocessor_tokenizer.py::test_tokenize_line_escaped_line_endings",
  "test/test_preprocessor_tokenizer.py::test_tokenize_file",
  "test/test_string_cursor.py::test_read[Normal read]",
  "test/test_string_cursor.py::test_read[Given a starting position]",
  "test/test_string_cursor.py::test_read[N-value exceeding length of string]",
  "test/test_string_cursor.py::test_read_until[until string]",
  "test/test_string_cursor.py::test_read_until[until string eof]",
  "test/test_string_cursor.py::test_read_until[until string starting on char]",
  "test/test_string_cursor.py::test_read_until[until set]",
  "test/test_string_cursor.py::test_read_until[until set starting on char]",
  "test/test_string_cursor.py::test_read_until[until string matching string]",
  "test/test_string_cursor.py::test_read_until[until lambda]",
  "test/test_string_cursor.py::test_read_until[bounds check done before cond]",
  "test/test_string_cursor.py::test_read_match[String match]",
  "test/test_string_cursor.py::test_read_match[Invalid string match]",
  "test/test_string_cursor.py::test_read_match[String match with offset]",
  "test/test_string_cursor.py::test_read_match[Regex match]",
  "test/test_string_cursor.py::test_read_match[Regex match with offset]",
  "test/test_string_cursor.py::test_read_match[Invalid regex match]",
  "test/test_useful_normalize_path.py::test_simple_str",
  "test/test_useful_normalize_path.py::test_str_path_to_dir_with_no_subdir",
  "test/test_useful_normalize_path.py::test_str_path_to_dir_with_subdir",
  "test/test_useful_normalize_path.py::test_glob_str",
  "test/test_useful_normalize_path.py::test_str_iterable",
  "test/test_useful_normalize_path.py::test_mixed_iterable",
  "test/test_util_tokens.py::test_token_equality"
]